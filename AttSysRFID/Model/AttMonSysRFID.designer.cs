#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AttSysRFID.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AttMonSysRFID")]
	public partial class AttMonSysRFIDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertT_Application(T_Application instance);
    partial void UpdateT_Application(T_Application instance);
    partial void DeleteT_Application(T_Application instance);
    partial void InsertT_CivilStatus(T_CivilStatus instance);
    partial void UpdateT_CivilStatus(T_CivilStatus instance);
    partial void DeleteT_CivilStatus(T_CivilStatus instance);
    partial void InsertT_SendingNotificationAuthorized(T_SendingNotificationAuthorized instance);
    partial void UpdateT_SendingNotificationAuthorized(T_SendingNotificationAuthorized instance);
    partial void DeleteT_SendingNotificationAuthorized(T_SendingNotificationAuthorized instance);
    partial void InsertT_ParenstInfo(T_ParenstInfo instance);
    partial void UpdateT_ParenstInfo(T_ParenstInfo instance);
    partial void DeleteT_ParenstInfo(T_ParenstInfo instance);
    partial void InsertT_SystemUser(T_SystemUser instance);
    partial void UpdateT_SystemUser(T_SystemUser instance);
    partial void DeleteT_SystemUser(T_SystemUser instance);
    partial void InsertT_YearLevel(T_YearLevel instance);
    partial void UpdateT_YearLevel(T_YearLevel instance);
    partial void DeleteT_YearLevel(T_YearLevel instance);
    partial void InsertT_Course(T_Course instance);
    partial void UpdateT_Course(T_Course instance);
    partial void DeleteT_Course(T_Course instance);
    partial void InsertT_Semester(T_Semester instance);
    partial void UpdateT_Semester(T_Semester instance);
    partial void DeleteT_Semester(T_Semester instance);
    partial void InsertT_Subject(T_Subject instance);
    partial void UpdateT_Subject(T_Subject instance);
    partial void DeleteT_Subject(T_Subject instance);
    partial void InsertT_Day(T_Day instance);
    partial void UpdateT_Day(T_Day instance);
    partial void DeleteT_Day(T_Day instance);
    partial void InsertT_Time(T_Time instance);
    partial void UpdateT_Time(T_Time instance);
    partial void DeleteT_Time(T_Time instance);
    partial void InsertT_RoomTime(T_RoomTime instance);
    partial void UpdateT_RoomTime(T_RoomTime instance);
    partial void DeleteT_RoomTime(T_RoomTime instance);
    partial void InsertT_BranchBuilding(T_BranchBuilding instance);
    partial void UpdateT_BranchBuilding(T_BranchBuilding instance);
    partial void DeleteT_BranchBuilding(T_BranchBuilding instance);
    partial void InsertT_Room(T_Room instance);
    partial void UpdateT_Room(T_Room instance);
    partial void DeleteT_Room(T_Room instance);
    partial void InsertT_Type(T_Type instance);
    partial void UpdateT_Type(T_Type instance);
    partial void DeleteT_Type(T_Type instance);
    partial void InsertT_DeviceSettingRFID(T_DeviceSettingRFID instance);
    partial void UpdateT_DeviceSettingRFID(T_DeviceSettingRFID instance);
    partial void DeleteT_DeviceSettingRFID(T_DeviceSettingRFID instance);
    partial void InsertT_NotificationSetting(T_NotificationSetting instance);
    partial void UpdateT_NotificationSetting(T_NotificationSetting instance);
    partial void DeleteT_NotificationSetting(T_NotificationSetting instance);
    partial void InsertT_Message(T_Message instance);
    partial void UpdateT_Message(T_Message instance);
    partial void DeleteT_Message(T_Message instance);
    partial void InsertT_RoomDevie(T_RoomDevie instance);
    partial void UpdateT_RoomDevie(T_RoomDevie instance);
    partial void DeleteT_RoomDevie(T_RoomDevie instance);
    partial void InsertT_ActiveSemester(T_ActiveSemester instance);
    partial void UpdateT_ActiveSemester(T_ActiveSemester instance);
    partial void DeleteT_ActiveSemester(T_ActiveSemester instance);
    partial void InsertT_StudentInformation(T_StudentInformation instance);
    partial void UpdateT_StudentInformation(T_StudentInformation instance);
    partial void DeleteT_StudentInformation(T_StudentInformation instance);
    partial void InsertT_Remainder(T_Remainder instance);
    partial void UpdateT_Remainder(T_Remainder instance);
    partial void DeleteT_Remainder(T_Remainder instance);
    partial void InsertT_SystemUserLog(T_SystemUserLog instance);
    partial void UpdateT_SystemUserLog(T_SystemUserLog instance);
    partial void DeleteT_SystemUserLog(T_SystemUserLog instance);
    partial void InsertT_OnNotification(T_OnNotification instance);
    partial void UpdateT_OnNotification(T_OnNotification instance);
    partial void DeleteT_OnNotification(T_OnNotification instance);
    partial void InsertT_ScanUserLog(T_ScanUserLog instance);
    partial void UpdateT_ScanUserLog(T_ScanUserLog instance);
    partial void DeleteT_ScanUserLog(T_ScanUserLog instance);
    partial void InsertT_InstructorInformation(T_InstructorInformation instance);
    partial void UpdateT_InstructorInformation(T_InstructorInformation instance);
    partial void DeleteT_InstructorInformation(T_InstructorInformation instance);
    partial void InsertT_AccessRight(T_AccessRight instance);
    partial void UpdateT_AccessRight(T_AccessRight instance);
    partial void DeleteT_AccessRight(T_AccessRight instance);
    partial void InsertT_CourseAndSubject(T_CourseAndSubject instance);
    partial void UpdateT_CourseAndSubject(T_CourseAndSubject instance);
    partial void DeleteT_CourseAndSubject(T_CourseAndSubject instance);
    partial void InsertT_RegisteredStudentSemester(T_RegisteredStudentSemester instance);
    partial void UpdateT_RegisteredStudentSemester(T_RegisteredStudentSemester instance);
    partial void DeleteT_RegisteredStudentSemester(T_RegisteredStudentSemester instance);
    #endregion
		
		public AttMonSysRFIDDataContext() : 
				base(global::AttSysRFID.Properties.Settings.Default.AttMonSysRFIDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AttMonSysRFIDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AttMonSysRFIDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AttMonSysRFIDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AttMonSysRFIDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<T_Application> T_Applications
		{
			get
			{
				return this.GetTable<T_Application>();
			}
		}
		
		public System.Data.Linq.Table<T_CivilStatus> T_CivilStatus
		{
			get
			{
				return this.GetTable<T_CivilStatus>();
			}
		}
		
		public System.Data.Linq.Table<T_SendingNotificationAuthorized> T_SendingNotificationAuthorizeds
		{
			get
			{
				return this.GetTable<T_SendingNotificationAuthorized>();
			}
		}
		
		public System.Data.Linq.Table<T_ParenstInfo> T_ParenstInfos
		{
			get
			{
				return this.GetTable<T_ParenstInfo>();
			}
		}
		
		public System.Data.Linq.Table<T_SystemUser> T_SystemUsers
		{
			get
			{
				return this.GetTable<T_SystemUser>();
			}
		}
		
		public System.Data.Linq.Table<T_YearLevel> T_YearLevels
		{
			get
			{
				return this.GetTable<T_YearLevel>();
			}
		}
		
		public System.Data.Linq.Table<T_Course> T_Courses
		{
			get
			{
				return this.GetTable<T_Course>();
			}
		}
		
		public System.Data.Linq.Table<T_Semester> T_Semesters
		{
			get
			{
				return this.GetTable<T_Semester>();
			}
		}
		
		public System.Data.Linq.Table<T_Subject> T_Subjects
		{
			get
			{
				return this.GetTable<T_Subject>();
			}
		}
		
		public System.Data.Linq.Table<T_Day> T_Days
		{
			get
			{
				return this.GetTable<T_Day>();
			}
		}
		
		public System.Data.Linq.Table<T_Time> T_Times
		{
			get
			{
				return this.GetTable<T_Time>();
			}
		}
		
		public System.Data.Linq.Table<T_RoomTime> T_RoomTimes
		{
			get
			{
				return this.GetTable<T_RoomTime>();
			}
		}
		
		public System.Data.Linq.Table<T_BranchBuilding> T_BranchBuildings
		{
			get
			{
				return this.GetTable<T_BranchBuilding>();
			}
		}
		
		public System.Data.Linq.Table<T_Room> T_Rooms
		{
			get
			{
				return this.GetTable<T_Room>();
			}
		}
		
		public System.Data.Linq.Table<T_Type> T_Types
		{
			get
			{
				return this.GetTable<T_Type>();
			}
		}
		
		public System.Data.Linq.Table<T_DeviceSettingRFID> T_DeviceSettingRFIDs
		{
			get
			{
				return this.GetTable<T_DeviceSettingRFID>();
			}
		}
		
		public System.Data.Linq.Table<T_NotificationSetting> T_NotificationSettings
		{
			get
			{
				return this.GetTable<T_NotificationSetting>();
			}
		}
		
		public System.Data.Linq.Table<T_Message> T_Messages
		{
			get
			{
				return this.GetTable<T_Message>();
			}
		}
		
		public System.Data.Linq.Table<T_RoomDevie> T_RoomDevies
		{
			get
			{
				return this.GetTable<T_RoomDevie>();
			}
		}
		
		public System.Data.Linq.Table<T_ActiveSemester> T_ActiveSemesters
		{
			get
			{
				return this.GetTable<T_ActiveSemester>();
			}
		}
		
		public System.Data.Linq.Table<T_StudentInformation> T_StudentInformations
		{
			get
			{
				return this.GetTable<T_StudentInformation>();
			}
		}
		
		public System.Data.Linq.Table<T_Remainder> T_Remainders
		{
			get
			{
				return this.GetTable<T_Remainder>();
			}
		}
		
		public System.Data.Linq.Table<T_SystemUserLog> T_SystemUserLogs
		{
			get
			{
				return this.GetTable<T_SystemUserLog>();
			}
		}
		
		public System.Data.Linq.Table<T_OnNotification> T_OnNotifications
		{
			get
			{
				return this.GetTable<T_OnNotification>();
			}
		}
		
		public System.Data.Linq.Table<T_ScanUserLog> T_ScanUserLogs
		{
			get
			{
				return this.GetTable<T_ScanUserLog>();
			}
		}
		
		public System.Data.Linq.Table<T_InstructorInformation> T_InstructorInformations
		{
			get
			{
				return this.GetTable<T_InstructorInformation>();
			}
		}
		
		public System.Data.Linq.Table<T_AccessRight> T_AccessRights
		{
			get
			{
				return this.GetTable<T_AccessRight>();
			}
		}
		
		public System.Data.Linq.Table<T_CourseAndSubject> T_CourseAndSubjects
		{
			get
			{
				return this.GetTable<T_CourseAndSubject>();
			}
		}
		
		public System.Data.Linq.Table<T_RegisteredStudentSemester> T_RegisteredStudentSemesters
		{
			get
			{
				return this.GetTable<T_RegisteredStudentSemester>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Application")]
	public partial class T_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Application;
		
		private string _Description;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnApplicationChanging(string value);
    partial void OnApplicationChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public T_Application()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Application", DbType="VarChar(50)")]
		public string Application
		{
			get
			{
				return this._Application;
			}
			set
			{
				if ((this._Application != value))
				{
					this.OnApplicationChanging(value);
					this.SendPropertyChanging();
					this._Application = value;
					this.SendPropertyChanged("Application");
					this.OnApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_CivilStatus")]
	public partial class T_CivilStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Status;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public T_CivilStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_SendingNotificationAuthorized")]
	public partial class T_SendingNotificationAuthorized : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _StudentID;
		
		private string _MotherID;
		
		private string _FatherID;
		
		private bool _StudentSMS;
		
		private bool _StudentRFID;
		
		private string _StdContactNo;
		
		private string _StdRFID;
		
		private bool _MotherSMS;
		
		private bool _MotherRFID;
		
		private string _MomContactNo;
		
		private string _MomRFID;
		
		private bool _FatherSMS;
		
		private bool _FatherRFID;
		
		private string _DodContactNo;
		
		private string _DodRFID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnStudentIDChanging(string value);
    partial void OnStudentIDChanged();
    partial void OnMotherIDChanging(string value);
    partial void OnMotherIDChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnStudentSMSChanging(bool value);
    partial void OnStudentSMSChanged();
    partial void OnStudentRFIDChanging(bool value);
    partial void OnStudentRFIDChanged();
    partial void OnStdContactNoChanging(string value);
    partial void OnStdContactNoChanged();
    partial void OnStdRFIDChanging(string value);
    partial void OnStdRFIDChanged();
    partial void OnMotherSMSChanging(bool value);
    partial void OnMotherSMSChanged();
    partial void OnMotherRFIDChanging(bool value);
    partial void OnMotherRFIDChanged();
    partial void OnMomContactNoChanging(string value);
    partial void OnMomContactNoChanged();
    partial void OnMomRFIDChanging(string value);
    partial void OnMomRFIDChanged();
    partial void OnFatherSMSChanging(bool value);
    partial void OnFatherSMSChanged();
    partial void OnFatherRFIDChanging(bool value);
    partial void OnFatherRFIDChanged();
    partial void OnDodContactNoChanging(string value);
    partial void OnDodContactNoChanged();
    partial void OnDodRFIDChanging(string value);
    partial void OnDodRFIDChanged();
    #endregion
		
		public T_SendingNotificationAuthorized()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MotherID
		{
			get
			{
				return this._MotherID;
			}
			set
			{
				if ((this._MotherID != value))
				{
					this.OnMotherIDChanging(value);
					this.SendPropertyChanging();
					this._MotherID = value;
					this.SendPropertyChanged("MotherID");
					this.OnMotherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentSMS", DbType="Bit NOT NULL")]
		public bool StudentSMS
		{
			get
			{
				return this._StudentSMS;
			}
			set
			{
				if ((this._StudentSMS != value))
				{
					this.OnStudentSMSChanging(value);
					this.SendPropertyChanging();
					this._StudentSMS = value;
					this.SendPropertyChanged("StudentSMS");
					this.OnStudentSMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentRFID", DbType="Bit NOT NULL")]
		public bool StudentRFID
		{
			get
			{
				return this._StudentRFID;
			}
			set
			{
				if ((this._StudentRFID != value))
				{
					this.OnStudentRFIDChanging(value);
					this.SendPropertyChanging();
					this._StudentRFID = value;
					this.SendPropertyChanged("StudentRFID");
					this.OnStudentRFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StdContactNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StdContactNo
		{
			get
			{
				return this._StdContactNo;
			}
			set
			{
				if ((this._StdContactNo != value))
				{
					this.OnStdContactNoChanging(value);
					this.SendPropertyChanging();
					this._StdContactNo = value;
					this.SendPropertyChanged("StdContactNo");
					this.OnStdContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StdRFID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StdRFID
		{
			get
			{
				return this._StdRFID;
			}
			set
			{
				if ((this._StdRFID != value))
				{
					this.OnStdRFIDChanging(value);
					this.SendPropertyChanging();
					this._StdRFID = value;
					this.SendPropertyChanged("StdRFID");
					this.OnStdRFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherSMS", DbType="Bit NOT NULL")]
		public bool MotherSMS
		{
			get
			{
				return this._MotherSMS;
			}
			set
			{
				if ((this._MotherSMS != value))
				{
					this.OnMotherSMSChanging(value);
					this.SendPropertyChanging();
					this._MotherSMS = value;
					this.SendPropertyChanged("MotherSMS");
					this.OnMotherSMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherRFID", DbType="Bit NOT NULL")]
		public bool MotherRFID
		{
			get
			{
				return this._MotherRFID;
			}
			set
			{
				if ((this._MotherRFID != value))
				{
					this.OnMotherRFIDChanging(value);
					this.SendPropertyChanging();
					this._MotherRFID = value;
					this.SendPropertyChanged("MotherRFID");
					this.OnMotherRFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MomContactNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MomContactNo
		{
			get
			{
				return this._MomContactNo;
			}
			set
			{
				if ((this._MomContactNo != value))
				{
					this.OnMomContactNoChanging(value);
					this.SendPropertyChanging();
					this._MomContactNo = value;
					this.SendPropertyChanged("MomContactNo");
					this.OnMomContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MomRFID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MomRFID
		{
			get
			{
				return this._MomRFID;
			}
			set
			{
				if ((this._MomRFID != value))
				{
					this.OnMomRFIDChanging(value);
					this.SendPropertyChanging();
					this._MomRFID = value;
					this.SendPropertyChanged("MomRFID");
					this.OnMomRFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherSMS", DbType="Bit NOT NULL")]
		public bool FatherSMS
		{
			get
			{
				return this._FatherSMS;
			}
			set
			{
				if ((this._FatherSMS != value))
				{
					this.OnFatherSMSChanging(value);
					this.SendPropertyChanging();
					this._FatherSMS = value;
					this.SendPropertyChanged("FatherSMS");
					this.OnFatherSMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherRFID", DbType="Bit NOT NULL")]
		public bool FatherRFID
		{
			get
			{
				return this._FatherRFID;
			}
			set
			{
				if ((this._FatherRFID != value))
				{
					this.OnFatherRFIDChanging(value);
					this.SendPropertyChanging();
					this._FatherRFID = value;
					this.SendPropertyChanged("FatherRFID");
					this.OnFatherRFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DodContactNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DodContactNo
		{
			get
			{
				return this._DodContactNo;
			}
			set
			{
				if ((this._DodContactNo != value))
				{
					this.OnDodContactNoChanging(value);
					this.SendPropertyChanging();
					this._DodContactNo = value;
					this.SendPropertyChanged("DodContactNo");
					this.OnDodContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DodRFID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DodRFID
		{
			get
			{
				return this._DodRFID;
			}
			set
			{
				if ((this._DodRFID != value))
				{
					this.OnDodRFIDChanging(value);
					this.SendPropertyChanging();
					this._DodRFID = value;
					this.SendPropertyChanged("DodRFID");
					this.OnDodRFIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_ParenstInfo")]
	public partial class T_ParenstInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _StudentID;
		
		private string _MotherID;
		
		private string _FatherID;
		
		private string _MomLastName;
		
		private string _MomFirstName;
		
		private string _MomMiddleName;
		
		private string _MomContactNo;
		
		private string _MomRFIDNo;
		
		private string _MomCivilStatus;
		
		private string _MomAddress;
		
		private System.Nullable<bool> _MRFIDNo;
		
		private System.Nullable<bool> _MContactNo;
		
		private System.Nullable<bool> _MActive;
		
		private string _DadLastName;
		
		private string _DadFistName;
		
		private string _DadMiddleName;
		
		private string _DadContactNo;
		
		private string _DadRFIDNo;
		
		private string _DadCivilStatus;
		
		private string _DadAddress;
		
		private System.Nullable<bool> _FRFIDNo;
		
		private System.Nullable<bool> _FContactNo;
		
		private System.Nullable<bool> _FActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnStudentIDChanging(string value);
    partial void OnStudentIDChanged();
    partial void OnMotherIDChanging(string value);
    partial void OnMotherIDChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnMomLastNameChanging(string value);
    partial void OnMomLastNameChanged();
    partial void OnMomFirstNameChanging(string value);
    partial void OnMomFirstNameChanged();
    partial void OnMomMiddleNameChanging(string value);
    partial void OnMomMiddleNameChanged();
    partial void OnMomContactNoChanging(string value);
    partial void OnMomContactNoChanged();
    partial void OnMomRFIDNoChanging(string value);
    partial void OnMomRFIDNoChanged();
    partial void OnMomCivilStatusChanging(string value);
    partial void OnMomCivilStatusChanged();
    partial void OnMomAddressChanging(string value);
    partial void OnMomAddressChanged();
    partial void OnMRFIDNoChanging(System.Nullable<bool> value);
    partial void OnMRFIDNoChanged();
    partial void OnMContactNoChanging(System.Nullable<bool> value);
    partial void OnMContactNoChanged();
    partial void OnMActiveChanging(System.Nullable<bool> value);
    partial void OnMActiveChanged();
    partial void OnDadLastNameChanging(string value);
    partial void OnDadLastNameChanged();
    partial void OnDadFistNameChanging(string value);
    partial void OnDadFistNameChanged();
    partial void OnDadMiddleNameChanging(string value);
    partial void OnDadMiddleNameChanged();
    partial void OnDadContactNoChanging(string value);
    partial void OnDadContactNoChanged();
    partial void OnDadRFIDNoChanging(string value);
    partial void OnDadRFIDNoChanged();
    partial void OnDadCivilStatusChanging(string value);
    partial void OnDadCivilStatusChanged();
    partial void OnDadAddressChanging(string value);
    partial void OnDadAddressChanged();
    partial void OnFRFIDNoChanging(System.Nullable<bool> value);
    partial void OnFRFIDNoChanged();
    partial void OnFContactNoChanging(System.Nullable<bool> value);
    partial void OnFContactNoChanged();
    partial void OnFActiveChanging(System.Nullable<bool> value);
    partial void OnFActiveChanged();
    #endregion
		
		public T_ParenstInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="VarChar(50)")]
		public string StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherID", DbType="VarChar(50)")]
		public string MotherID
		{
			get
			{
				return this._MotherID;
			}
			set
			{
				if ((this._MotherID != value))
				{
					this.OnMotherIDChanging(value);
					this.SendPropertyChanging();
					this._MotherID = value;
					this.SendPropertyChanged("MotherID");
					this.OnMotherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50)")]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MomLastName", DbType="VarChar(50)")]
		public string MomLastName
		{
			get
			{
				return this._MomLastName;
			}
			set
			{
				if ((this._MomLastName != value))
				{
					this.OnMomLastNameChanging(value);
					this.SendPropertyChanging();
					this._MomLastName = value;
					this.SendPropertyChanged("MomLastName");
					this.OnMomLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MomFirstName", DbType="VarChar(50)")]
		public string MomFirstName
		{
			get
			{
				return this._MomFirstName;
			}
			set
			{
				if ((this._MomFirstName != value))
				{
					this.OnMomFirstNameChanging(value);
					this.SendPropertyChanging();
					this._MomFirstName = value;
					this.SendPropertyChanged("MomFirstName");
					this.OnMomFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MomMiddleName", DbType="VarChar(50)")]
		public string MomMiddleName
		{
			get
			{
				return this._MomMiddleName;
			}
			set
			{
				if ((this._MomMiddleName != value))
				{
					this.OnMomMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MomMiddleName = value;
					this.SendPropertyChanged("MomMiddleName");
					this.OnMomMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MomContactNo", DbType="VarChar(50)")]
		public string MomContactNo
		{
			get
			{
				return this._MomContactNo;
			}
			set
			{
				if ((this._MomContactNo != value))
				{
					this.OnMomContactNoChanging(value);
					this.SendPropertyChanging();
					this._MomContactNo = value;
					this.SendPropertyChanged("MomContactNo");
					this.OnMomContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MomRFIDNo", DbType="VarChar(50)")]
		public string MomRFIDNo
		{
			get
			{
				return this._MomRFIDNo;
			}
			set
			{
				if ((this._MomRFIDNo != value))
				{
					this.OnMomRFIDNoChanging(value);
					this.SendPropertyChanging();
					this._MomRFIDNo = value;
					this.SendPropertyChanged("MomRFIDNo");
					this.OnMomRFIDNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MomCivilStatus", DbType="VarChar(20)")]
		public string MomCivilStatus
		{
			get
			{
				return this._MomCivilStatus;
			}
			set
			{
				if ((this._MomCivilStatus != value))
				{
					this.OnMomCivilStatusChanging(value);
					this.SendPropertyChanging();
					this._MomCivilStatus = value;
					this.SendPropertyChanged("MomCivilStatus");
					this.OnMomCivilStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MomAddress", DbType="VarChar(MAX)")]
		public string MomAddress
		{
			get
			{
				return this._MomAddress;
			}
			set
			{
				if ((this._MomAddress != value))
				{
					this.OnMomAddressChanging(value);
					this.SendPropertyChanging();
					this._MomAddress = value;
					this.SendPropertyChanged("MomAddress");
					this.OnMomAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRFIDNo", DbType="Bit")]
		public System.Nullable<bool> MRFIDNo
		{
			get
			{
				return this._MRFIDNo;
			}
			set
			{
				if ((this._MRFIDNo != value))
				{
					this.OnMRFIDNoChanging(value);
					this.SendPropertyChanging();
					this._MRFIDNo = value;
					this.SendPropertyChanged("MRFIDNo");
					this.OnMRFIDNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MContactNo", DbType="Bit")]
		public System.Nullable<bool> MContactNo
		{
			get
			{
				return this._MContactNo;
			}
			set
			{
				if ((this._MContactNo != value))
				{
					this.OnMContactNoChanging(value);
					this.SendPropertyChanging();
					this._MContactNo = value;
					this.SendPropertyChanged("MContactNo");
					this.OnMContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MActive", DbType="Bit")]
		public System.Nullable<bool> MActive
		{
			get
			{
				return this._MActive;
			}
			set
			{
				if ((this._MActive != value))
				{
					this.OnMActiveChanging(value);
					this.SendPropertyChanging();
					this._MActive = value;
					this.SendPropertyChanged("MActive");
					this.OnMActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DadLastName", DbType="VarChar(50)")]
		public string DadLastName
		{
			get
			{
				return this._DadLastName;
			}
			set
			{
				if ((this._DadLastName != value))
				{
					this.OnDadLastNameChanging(value);
					this.SendPropertyChanging();
					this._DadLastName = value;
					this.SendPropertyChanged("DadLastName");
					this.OnDadLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DadFistName", DbType="VarChar(50)")]
		public string DadFistName
		{
			get
			{
				return this._DadFistName;
			}
			set
			{
				if ((this._DadFistName != value))
				{
					this.OnDadFistNameChanging(value);
					this.SendPropertyChanging();
					this._DadFistName = value;
					this.SendPropertyChanged("DadFistName");
					this.OnDadFistNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DadMiddleName", DbType="VarChar(50)")]
		public string DadMiddleName
		{
			get
			{
				return this._DadMiddleName;
			}
			set
			{
				if ((this._DadMiddleName != value))
				{
					this.OnDadMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._DadMiddleName = value;
					this.SendPropertyChanged("DadMiddleName");
					this.OnDadMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DadContactNo", DbType="VarChar(50)")]
		public string DadContactNo
		{
			get
			{
				return this._DadContactNo;
			}
			set
			{
				if ((this._DadContactNo != value))
				{
					this.OnDadContactNoChanging(value);
					this.SendPropertyChanging();
					this._DadContactNo = value;
					this.SendPropertyChanged("DadContactNo");
					this.OnDadContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DadRFIDNo", DbType="VarChar(50)")]
		public string DadRFIDNo
		{
			get
			{
				return this._DadRFIDNo;
			}
			set
			{
				if ((this._DadRFIDNo != value))
				{
					this.OnDadRFIDNoChanging(value);
					this.SendPropertyChanging();
					this._DadRFIDNo = value;
					this.SendPropertyChanged("DadRFIDNo");
					this.OnDadRFIDNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DadCivilStatus", DbType="VarChar(20)")]
		public string DadCivilStatus
		{
			get
			{
				return this._DadCivilStatus;
			}
			set
			{
				if ((this._DadCivilStatus != value))
				{
					this.OnDadCivilStatusChanging(value);
					this.SendPropertyChanging();
					this._DadCivilStatus = value;
					this.SendPropertyChanged("DadCivilStatus");
					this.OnDadCivilStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DadAddress", DbType="VarChar(MAX)")]
		public string DadAddress
		{
			get
			{
				return this._DadAddress;
			}
			set
			{
				if ((this._DadAddress != value))
				{
					this.OnDadAddressChanging(value);
					this.SendPropertyChanging();
					this._DadAddress = value;
					this.SendPropertyChanged("DadAddress");
					this.OnDadAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FRFIDNo", DbType="Bit")]
		public System.Nullable<bool> FRFIDNo
		{
			get
			{
				return this._FRFIDNo;
			}
			set
			{
				if ((this._FRFIDNo != value))
				{
					this.OnFRFIDNoChanging(value);
					this.SendPropertyChanging();
					this._FRFIDNo = value;
					this.SendPropertyChanged("FRFIDNo");
					this.OnFRFIDNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FContactNo", DbType="Bit")]
		public System.Nullable<bool> FContactNo
		{
			get
			{
				return this._FContactNo;
			}
			set
			{
				if ((this._FContactNo != value))
				{
					this.OnFContactNoChanging(value);
					this.SendPropertyChanging();
					this._FContactNo = value;
					this.SendPropertyChanged("FContactNo");
					this.OnFContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FActive", DbType="Bit")]
		public System.Nullable<bool> FActive
		{
			get
			{
				return this._FActive;
			}
			set
			{
				if ((this._FActive != value))
				{
					this.OnFActiveChanging(value);
					this.SendPropertyChanging();
					this._FActive = value;
					this.SendPropertyChanged("FActive");
					this.OnFActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_SystemUser")]
	public partial class T_SystemUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _UserID;
		
		private string _Password;
		
		private string _EncryptedPassword;
		
		private string _DisplayName;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _PathImage;
		
		private System.Nullable<System.DateTime> _Bday;
		
		private string _ContactNo;
		
		private string _PositionID;
		
		private string _Theme;
		
		private System.Nullable<bool> _Active;
		
		private string _Username;
		
		private System.Nullable<bool> _RFIDStatus;
		
		private string _RFIDNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEncryptedPasswordChanging(string value);
    partial void OnEncryptedPasswordChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnPathImageChanging(string value);
    partial void OnPathImageChanged();
    partial void OnBdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBdayChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnPositionIDChanging(string value);
    partial void OnPositionIDChanged();
    partial void OnThemeChanging(string value);
    partial void OnThemeChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnRFIDStatusChanging(System.Nullable<bool> value);
    partial void OnRFIDStatusChanged();
    partial void OnRFIDNoChanging(string value);
    partial void OnRFIDNoChanged();
    #endregion
		
		public T_SystemUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncryptedPassword", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EncryptedPassword
		{
			get
			{
				return this._EncryptedPassword;
			}
			set
			{
				if ((this._EncryptedPassword != value))
				{
					this.OnEncryptedPasswordChanging(value);
					this.SendPropertyChanging();
					this._EncryptedPassword = value;
					this.SendPropertyChanged("EncryptedPassword");
					this.OnEncryptedPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathImage", DbType="VarChar(MAX)")]
		public string PathImage
		{
			get
			{
				return this._PathImage;
			}
			set
			{
				if ((this._PathImage != value))
				{
					this.OnPathImageChanging(value);
					this.SendPropertyChanging();
					this._PathImage = value;
					this.SendPropertyChanged("PathImage");
					this.OnPathImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bday", DbType="Date")]
		public System.Nullable<System.DateTime> Bday
		{
			get
			{
				return this._Bday;
			}
			set
			{
				if ((this._Bday != value))
				{
					this.OnBdayChanging(value);
					this.SendPropertyChanging();
					this._Bday = value;
					this.SendPropertyChanged("Bday");
					this.OnBdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(20)")]
		public string ContactNo
		{
			get
			{
				return this._ContactNo;
			}
			set
			{
				if ((this._ContactNo != value))
				{
					this.OnContactNoChanging(value);
					this.SendPropertyChanging();
					this._ContactNo = value;
					this.SendPropertyChanged("ContactNo");
					this.OnContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this.OnPositionIDChanging(value);
					this.SendPropertyChanging();
					this._PositionID = value;
					this.SendPropertyChanged("PositionID");
					this.OnPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Theme", DbType="VarChar(50)")]
		public string Theme
		{
			get
			{
				return this._Theme;
			}
			set
			{
				if ((this._Theme != value))
				{
					this.OnThemeChanging(value);
					this.SendPropertyChanging();
					this._Theme = value;
					this.SendPropertyChanged("Theme");
					this.OnThemeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFIDStatus", DbType="Bit")]
		public System.Nullable<bool> RFIDStatus
		{
			get
			{
				return this._RFIDStatus;
			}
			set
			{
				if ((this._RFIDStatus != value))
				{
					this.OnRFIDStatusChanging(value);
					this.SendPropertyChanging();
					this._RFIDStatus = value;
					this.SendPropertyChanged("RFIDStatus");
					this.OnRFIDStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFIDNo", DbType="VarChar(50)")]
		public string RFIDNo
		{
			get
			{
				return this._RFIDNo;
			}
			set
			{
				if ((this._RFIDNo != value))
				{
					this.OnRFIDNoChanging(value);
					this.SendPropertyChanging();
					this._RFIDNo = value;
					this.SendPropertyChanged("RFIDNo");
					this.OnRFIDNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_YearLevel")]
	public partial class T_YearLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _YearLevel;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _Count;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnYearLevelChanging(string value);
    partial void OnYearLevelChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    #endregion
		
		public T_YearLevel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearLevel", DbType="VarChar(50)")]
		public string YearLevel
		{
			get
			{
				return this._YearLevel;
			}
			set
			{
				if ((this._YearLevel != value))
				{
					this.OnYearLevelChanging(value);
					this.SendPropertyChanging();
					this._YearLevel = value;
					this.SendPropertyChanged("YearLevel");
					this.OnYearLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Course")]
	public partial class T_Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _CourseCode;
		
		private string _Course;
		
		private string _Description;
		
		private System.Nullable<int> _YearMinimum;
		
		private System.Nullable<int> _YearMaximum;
		
		private string _YearLevelFromTo;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCourseCodeChanging(string value);
    partial void OnCourseCodeChanged();
    partial void OnCourseChanging(string value);
    partial void OnCourseChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnYearMinimumChanging(System.Nullable<int> value);
    partial void OnYearMinimumChanged();
    partial void OnYearMaximumChanging(System.Nullable<int> value);
    partial void OnYearMaximumChanged();
    partial void OnYearLevelFromToChanging(string value);
    partial void OnYearLevelFromToChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public T_Course()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCode", DbType="VarChar(50)")]
		public string CourseCode
		{
			get
			{
				return this._CourseCode;
			}
			set
			{
				if ((this._CourseCode != value))
				{
					this.OnCourseCodeChanging(value);
					this.SendPropertyChanging();
					this._CourseCode = value;
					this.SendPropertyChanged("CourseCode");
					this.OnCourseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="VarChar(MAX)")]
		public string Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearMinimum", DbType="Int")]
		public System.Nullable<int> YearMinimum
		{
			get
			{
				return this._YearMinimum;
			}
			set
			{
				if ((this._YearMinimum != value))
				{
					this.OnYearMinimumChanging(value);
					this.SendPropertyChanging();
					this._YearMinimum = value;
					this.SendPropertyChanged("YearMinimum");
					this.OnYearMinimumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearMaximum", DbType="Int")]
		public System.Nullable<int> YearMaximum
		{
			get
			{
				return this._YearMaximum;
			}
			set
			{
				if ((this._YearMaximum != value))
				{
					this.OnYearMaximumChanging(value);
					this.SendPropertyChanging();
					this._YearMaximum = value;
					this.SendPropertyChanged("YearMaximum");
					this.OnYearMaximumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearLevelFromTo", DbType="VarChar(50)")]
		public string YearLevelFromTo
		{
			get
			{
				return this._YearLevelFromTo;
			}
			set
			{
				if ((this._YearLevelFromTo != value))
				{
					this.OnYearLevelFromToChanging(value);
					this.SendPropertyChanging();
					this._YearLevelFromTo = value;
					this.SendPropertyChanged("YearLevelFromTo");
					this.OnYearLevelFromToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Semester")]
	public partial class T_Semester : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Code;
		
		private string _Semester;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSemesterChanging(string value);
    partial void OnSemesterChanged();
    #endregion
		
		public T_Semester()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="VarChar(50)")]
		public string Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this.OnSemesterChanging(value);
					this.SendPropertyChanging();
					this._Semester = value;
					this.SendPropertyChanged("Semester");
					this.OnSemesterChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Subject")]
	public partial class T_Subject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Code;
		
		private string _Description;
		
		private System.Nullable<int> _Unit;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUnitChanging(System.Nullable<int> value);
    partial void OnUnitChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public T_Subject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="Int")]
		public System.Nullable<int> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Day")]
	public partial class T_Day : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Day;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnDayChanging(string value);
    partial void OnDayChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public T_Day()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="VarChar(20)")]
		public string Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Time")]
	public partial class T_Time : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<System.DateTime> _TimeStart;
		
		private System.Nullable<System.DateTime> _TimeEnd;
		
		private System.Nullable<bool> _Active;
		
		private string _TimeCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTimeStartChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStartChanged();
    partial void OnTimeEndChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeEndChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnTimeCodeChanging(string value);
    partial void OnTimeCodeChanged();
    #endregion
		
		public T_Time()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStart
		{
			get
			{
				return this._TimeStart;
			}
			set
			{
				if ((this._TimeStart != value))
				{
					this.OnTimeStartChanging(value);
					this.SendPropertyChanging();
					this._TimeStart = value;
					this.SendPropertyChanged("TimeStart");
					this.OnTimeStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeEnd
		{
			get
			{
				return this._TimeEnd;
			}
			set
			{
				if ((this._TimeEnd != value))
				{
					this.OnTimeEndChanging(value);
					this.SendPropertyChanging();
					this._TimeEnd = value;
					this.SendPropertyChanged("TimeEnd");
					this.OnTimeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeCode", DbType="VarChar(20)")]
		public string TimeCode
		{
			get
			{
				return this._TimeCode;
			}
			set
			{
				if ((this._TimeCode != value))
				{
					this.OnTimeCodeChanging(value);
					this.SendPropertyChanging();
					this._TimeCode = value;
					this.SendPropertyChanged("TimeCode");
					this.OnTimeCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_RoomTime")]
	public partial class T_RoomTime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _TimeCode;
		
		private string _RoomCode;
		
		private System.Nullable<bool> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTimeCodeChanging(string value);
    partial void OnTimeCodeChanged();
    partial void OnRoomCodeChanging(string value);
    partial void OnRoomCodeChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public T_RoomTime()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeCode", DbType="VarChar(50)")]
		public string TimeCode
		{
			get
			{
				return this._TimeCode;
			}
			set
			{
				if ((this._TimeCode != value))
				{
					this.OnTimeCodeChanging(value);
					this.SendPropertyChanging();
					this._TimeCode = value;
					this.SendPropertyChanged("TimeCode");
					this.OnTimeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomCode", DbType="VarChar(50)")]
		public string RoomCode
		{
			get
			{
				return this._RoomCode;
			}
			set
			{
				if ((this._RoomCode != value))
				{
					this.OnRoomCodeChanging(value);
					this.SendPropertyChanging();
					this._RoomCode = value;
					this.SendPropertyChanged("RoomCode");
					this.OnRoomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_BranchBuilding")]
	public partial class T_BranchBuilding : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Branch;
		
		private string _BuildingCode;
		
		private string _BuildingName;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnBuildingCodeChanging(string value);
    partial void OnBuildingCodeChanged();
    partial void OnBuildingNameChanging(string value);
    partial void OnBuildingNameChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public T_BranchBuilding()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingCode", DbType="VarChar(50)")]
		public string BuildingCode
		{
			get
			{
				return this._BuildingCode;
			}
			set
			{
				if ((this._BuildingCode != value))
				{
					this.OnBuildingCodeChanging(value);
					this.SendPropertyChanging();
					this._BuildingCode = value;
					this.SendPropertyChanged("BuildingCode");
					this.OnBuildingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingName", DbType="VarChar(MAX)")]
		public string BuildingName
		{
			get
			{
				return this._BuildingName;
			}
			set
			{
				if ((this._BuildingName != value))
				{
					this.OnBuildingNameChanging(value);
					this.SendPropertyChanging();
					this._BuildingName = value;
					this.SendPropertyChanged("BuildingName");
					this.OnBuildingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Room")]
	public partial class T_Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _RoomCode;
		
		private string _RoomType;
		
		private string _Description;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _Capacity;
		
		private string _TimeID;
		
		private string _BuildingCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRoomCodeChanging(string value);
    partial void OnRoomCodeChanged();
    partial void OnRoomTypeChanging(string value);
    partial void OnRoomTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnCapacityChanging(System.Nullable<int> value);
    partial void OnCapacityChanged();
    partial void OnTimeIDChanging(string value);
    partial void OnTimeIDChanged();
    partial void OnBuildingCodeChanging(string value);
    partial void OnBuildingCodeChanged();
    #endregion
		
		public T_Room()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomCode", DbType="VarChar(20)")]
		public string RoomCode
		{
			get
			{
				return this._RoomCode;
			}
			set
			{
				if ((this._RoomCode != value))
				{
					this.OnRoomCodeChanging(value);
					this.SendPropertyChanging();
					this._RoomCode = value;
					this.SendPropertyChanged("RoomCode");
					this.OnRoomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomType", DbType="VarChar(50)")]
		public string RoomType
		{
			get
			{
				return this._RoomType;
			}
			set
			{
				if ((this._RoomType != value))
				{
					this.OnRoomTypeChanging(value);
					this.SendPropertyChanging();
					this._RoomType = value;
					this.SendPropertyChanged("RoomType");
					this.OnRoomTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int")]
		public System.Nullable<int> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeID", DbType="NChar(10)")]
		public string TimeID
		{
			get
			{
				return this._TimeID;
			}
			set
			{
				if ((this._TimeID != value))
				{
					this.OnTimeIDChanging(value);
					this.SendPropertyChanging();
					this._TimeID = value;
					this.SendPropertyChanged("TimeID");
					this.OnTimeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingCode", DbType="VarChar(50)")]
		public string BuildingCode
		{
			get
			{
				return this._BuildingCode;
			}
			set
			{
				if ((this._BuildingCode != value))
				{
					this.OnBuildingCodeChanging(value);
					this.SendPropertyChanging();
					this._BuildingCode = value;
					this.SendPropertyChanged("BuildingCode");
					this.OnBuildingCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Type")]
	public partial class T_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Type;
		
		private string _Code;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public T_Type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_DeviceSettingRFID")]
	public partial class T_DeviceSettingRFID : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _DeviceName;
		
		private string _Port;
		
		private int _BaundRate;
		
		private int _DataBit;
		
		private string _Parity;
		
		private string _StopBit;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    partial void OnPortChanging(string value);
    partial void OnPortChanged();
    partial void OnBaundRateChanging(int value);
    partial void OnBaundRateChanged();
    partial void OnDataBitChanging(int value);
    partial void OnDataBitChanged();
    partial void OnParityChanging(string value);
    partial void OnParityChanged();
    partial void OnStopBitChanging(string value);
    partial void OnStopBitChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public T_DeviceSettingRFID()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaundRate", DbType="Int NOT NULL")]
		public int BaundRate
		{
			get
			{
				return this._BaundRate;
			}
			set
			{
				if ((this._BaundRate != value))
				{
					this.OnBaundRateChanging(value);
					this.SendPropertyChanging();
					this._BaundRate = value;
					this.SendPropertyChanged("BaundRate");
					this.OnBaundRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataBit", DbType="Int NOT NULL")]
		public int DataBit
		{
			get
			{
				return this._DataBit;
			}
			set
			{
				if ((this._DataBit != value))
				{
					this.OnDataBitChanging(value);
					this.SendPropertyChanging();
					this._DataBit = value;
					this.SendPropertyChanged("DataBit");
					this.OnDataBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parity", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Parity
		{
			get
			{
				return this._Parity;
			}
			set
			{
				if ((this._Parity != value))
				{
					this.OnParityChanging(value);
					this.SendPropertyChanging();
					this._Parity = value;
					this.SendPropertyChanged("Parity");
					this.OnParityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopBit", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string StopBit
		{
			get
			{
				return this._StopBit;
			}
			set
			{
				if ((this._StopBit != value))
				{
					this.OnStopBitChanging(value);
					this.SendPropertyChanging();
					this._StopBit = value;
					this.SendPropertyChanged("StopBit");
					this.OnStopBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_NotificationSetting")]
	public partial class T_NotificationSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Site;
		
		private string _Page;
		
		private string _IPaddress;
		
		private string _ParamMessageName;
		
		private string _ParamMobileName;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSiteChanging(string value);
    partial void OnSiteChanged();
    partial void OnPageChanging(string value);
    partial void OnPageChanged();
    partial void OnIPaddressChanging(string value);
    partial void OnIPaddressChanged();
    partial void OnParamMessageNameChanging(string value);
    partial void OnParamMessageNameChanged();
    partial void OnParamMobileNameChanging(string value);
    partial void OnParamMobileNameChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public T_NotificationSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="VarChar(50)")]
		public string Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(50)")]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this.OnPageChanging(value);
					this.SendPropertyChanging();
					this._Page = value;
					this.SendPropertyChanged("Page");
					this.OnPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPaddress", DbType="VarChar(50)")]
		public string IPaddress
		{
			get
			{
				return this._IPaddress;
			}
			set
			{
				if ((this._IPaddress != value))
				{
					this.OnIPaddressChanging(value);
					this.SendPropertyChanging();
					this._IPaddress = value;
					this.SendPropertyChanged("IPaddress");
					this.OnIPaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParamMessageName", DbType="VarChar(20)")]
		public string ParamMessageName
		{
			get
			{
				return this._ParamMessageName;
			}
			set
			{
				if ((this._ParamMessageName != value))
				{
					this.OnParamMessageNameChanging(value);
					this.SendPropertyChanging();
					this._ParamMessageName = value;
					this.SendPropertyChanged("ParamMessageName");
					this.OnParamMessageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParamMobileName", DbType="VarChar(20)")]
		public string ParamMobileName
		{
			get
			{
				return this._ParamMobileName;
			}
			set
			{
				if ((this._ParamMobileName != value))
				{
					this.OnParamMobileNameChanging(value);
					this.SendPropertyChanging();
					this._ParamMobileName = value;
					this.SendPropertyChanged("ParamMobileName");
					this.OnParamMobileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Messages")]
	public partial class T_Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Code;
		
		private string _MessageAlert;
		
		private System.Nullable<int> _CoundSending;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnMessageAlertChanging(string value);
    partial void OnMessageAlertChanged();
    partial void OnCoundSendingChanging(System.Nullable<int> value);
    partial void OnCoundSendingChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public T_Message()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageAlert", DbType="VarChar(MAX)")]
		public string MessageAlert
		{
			get
			{
				return this._MessageAlert;
			}
			set
			{
				if ((this._MessageAlert != value))
				{
					this.OnMessageAlertChanging(value);
					this.SendPropertyChanging();
					this._MessageAlert = value;
					this.SendPropertyChanged("MessageAlert");
					this.OnMessageAlertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoundSending", DbType="Int")]
		public System.Nullable<int> CoundSending
		{
			get
			{
				return this._CoundSending;
			}
			set
			{
				if ((this._CoundSending != value))
				{
					this.OnCoundSendingChanging(value);
					this.SendPropertyChanging();
					this._CoundSending = value;
					this.SendPropertyChanged("CoundSending");
					this.OnCoundSendingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_RoomDevie")]
	public partial class T_RoomDevie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _RoomCode;
		
		private string _RoomType;
		
		private string _DeviceCode;
		
		private string _SerialPort;
		
		private string _DeviceName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRoomCodeChanging(string value);
    partial void OnRoomCodeChanged();
    partial void OnRoomTypeChanging(string value);
    partial void OnRoomTypeChanged();
    partial void OnDeviceCodeChanging(string value);
    partial void OnDeviceCodeChanged();
    partial void OnSerialPortChanging(string value);
    partial void OnSerialPortChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    #endregion
		
		public T_RoomDevie()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomCode", DbType="VarChar(50)")]
		public string RoomCode
		{
			get
			{
				return this._RoomCode;
			}
			set
			{
				if ((this._RoomCode != value))
				{
					this.OnRoomCodeChanging(value);
					this.SendPropertyChanging();
					this._RoomCode = value;
					this.SendPropertyChanged("RoomCode");
					this.OnRoomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomType", DbType="VarChar(50)")]
		public string RoomType
		{
			get
			{
				return this._RoomType;
			}
			set
			{
				if ((this._RoomType != value))
				{
					this.OnRoomTypeChanging(value);
					this.SendPropertyChanging();
					this._RoomType = value;
					this.SendPropertyChanged("RoomType");
					this.OnRoomTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceCode", DbType="VarChar(50)")]
		public string DeviceCode
		{
			get
			{
				return this._DeviceCode;
			}
			set
			{
				if ((this._DeviceCode != value))
				{
					this.OnDeviceCodeChanging(value);
					this.SendPropertyChanging();
					this._DeviceCode = value;
					this.SendPropertyChanged("DeviceCode");
					this.OnDeviceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialPort", DbType="VarChar(50)")]
		public string SerialPort
		{
			get
			{
				return this._SerialPort;
			}
			set
			{
				if ((this._SerialPort != value))
				{
					this.OnSerialPortChanging(value);
					this.SendPropertyChanging();
					this._SerialPort = value;
					this.SendPropertyChanged("SerialPort");
					this.OnSerialPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="VarChar(50)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_ActiveSemester")]
	public partial class T_ActiveSemester : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _YearSemester;
		
		private System.Nullable<System.DateTime> _DateStart;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private string _Semester;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnYearSemesterChanging(string value);
    partial void OnYearSemesterChanged();
    partial void OnDateStartChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStartChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnSemesterChanging(string value);
    partial void OnSemesterChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public T_ActiveSemester()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearSemester", DbType="VarChar(50)")]
		public string YearSemester
		{
			get
			{
				return this._YearSemester;
			}
			set
			{
				if ((this._YearSemester != value))
				{
					this.OnYearSemesterChanging(value);
					this.SendPropertyChanging();
					this._YearSemester = value;
					this.SendPropertyChanged("YearSemester");
					this.OnYearSemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="VarChar(50)")]
		public string Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this.OnSemesterChanging(value);
					this.SendPropertyChanging();
					this._Semester = value;
					this.SendPropertyChanged("Semester");
					this.OnSemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_StudentInformation")]
	public partial class T_StudentInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _StudentID;
		
		private string _MotherID;
		
		private string _FatherID;
		
		private string _Application;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _ContactNo;
		
		private System.DateTime _Bday;
		
		private string _Gender;
		
		private string _Course;
		
		private string _Address;
		
		private System.Nullable<bool> _CompletedStatus;
		
		private System.Nullable<bool> _GraduateStatus;
		
		private System.Nullable<bool> _EnrolledStatus;
		
		private System.Nullable<bool> _RFIDStatus;
		
		private System.Nullable<bool> _ContactNoStatus;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _DateRegistered;
		
		private string _DisplayName;
		
		private string _YearLevel;
		
		private string _ProfilePicture;
		
		private string _RFIDNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnStudentIDChanging(string value);
    partial void OnStudentIDChanged();
    partial void OnMotherIDChanging(string value);
    partial void OnMotherIDChanged();
    partial void OnFatherIDChanging(string value);
    partial void OnFatherIDChanged();
    partial void OnApplicationChanging(string value);
    partial void OnApplicationChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnBdayChanging(System.DateTime value);
    partial void OnBdayChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnCourseChanging(string value);
    partial void OnCourseChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCompletedStatusChanging(System.Nullable<bool> value);
    partial void OnCompletedStatusChanged();
    partial void OnGraduateStatusChanging(System.Nullable<bool> value);
    partial void OnGraduateStatusChanged();
    partial void OnEnrolledStatusChanging(System.Nullable<bool> value);
    partial void OnEnrolledStatusChanged();
    partial void OnRFIDStatusChanging(System.Nullable<bool> value);
    partial void OnRFIDStatusChanged();
    partial void OnContactNoStatusChanging(System.Nullable<bool> value);
    partial void OnContactNoStatusChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnDateRegisteredChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRegisteredChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnYearLevelChanging(string value);
    partial void OnYearLevelChanged();
    partial void OnProfilePictureChanging(string value);
    partial void OnProfilePictureChanged();
    partial void OnRFIDNoChanging(string value);
    partial void OnRFIDNoChanged();
    #endregion
		
		public T_StudentInformation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotherID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MotherID
		{
			get
			{
				return this._MotherID;
			}
			set
			{
				if ((this._MotherID != value))
				{
					this.OnMotherIDChanging(value);
					this.SendPropertyChanging();
					this._MotherID = value;
					this.SendPropertyChanged("MotherID");
					this.OnMotherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FatherID
		{
			get
			{
				return this._FatherID;
			}
			set
			{
				if ((this._FatherID != value))
				{
					this.OnFatherIDChanging(value);
					this.SendPropertyChanging();
					this._FatherID = value;
					this.SendPropertyChanged("FatherID");
					this.OnFatherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Application", DbType="VarChar(50)")]
		public string Application
		{
			get
			{
				return this._Application;
			}
			set
			{
				if ((this._Application != value))
				{
					this.OnApplicationChanging(value);
					this.SendPropertyChanging();
					this._Application = value;
					this.SendPropertyChanged("Application");
					this.OnApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNo
		{
			get
			{
				return this._ContactNo;
			}
			set
			{
				if ((this._ContactNo != value))
				{
					this.OnContactNoChanging(value);
					this.SendPropertyChanging();
					this._ContactNo = value;
					this.SendPropertyChanged("ContactNo");
					this.OnContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bday", DbType="Date NOT NULL")]
		public System.DateTime Bday
		{
			get
			{
				return this._Bday;
			}
			set
			{
				if ((this._Bday != value))
				{
					this.OnBdayChanging(value);
					this.SendPropertyChanging();
					this._Bday = value;
					this.SendPropertyChanged("Bday");
					this.OnBdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="VarChar(MAX)")]
		public string Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedStatus", DbType="Bit")]
		public System.Nullable<bool> CompletedStatus
		{
			get
			{
				return this._CompletedStatus;
			}
			set
			{
				if ((this._CompletedStatus != value))
				{
					this.OnCompletedStatusChanging(value);
					this.SendPropertyChanging();
					this._CompletedStatus = value;
					this.SendPropertyChanged("CompletedStatus");
					this.OnCompletedStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GraduateStatus", DbType="Bit")]
		public System.Nullable<bool> GraduateStatus
		{
			get
			{
				return this._GraduateStatus;
			}
			set
			{
				if ((this._GraduateStatus != value))
				{
					this.OnGraduateStatusChanging(value);
					this.SendPropertyChanging();
					this._GraduateStatus = value;
					this.SendPropertyChanged("GraduateStatus");
					this.OnGraduateStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnrolledStatus", DbType="Bit")]
		public System.Nullable<bool> EnrolledStatus
		{
			get
			{
				return this._EnrolledStatus;
			}
			set
			{
				if ((this._EnrolledStatus != value))
				{
					this.OnEnrolledStatusChanging(value);
					this.SendPropertyChanging();
					this._EnrolledStatus = value;
					this.SendPropertyChanged("EnrolledStatus");
					this.OnEnrolledStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFIDStatus", DbType="Bit")]
		public System.Nullable<bool> RFIDStatus
		{
			get
			{
				return this._RFIDStatus;
			}
			set
			{
				if ((this._RFIDStatus != value))
				{
					this.OnRFIDStatusChanging(value);
					this.SendPropertyChanging();
					this._RFIDStatus = value;
					this.SendPropertyChanged("RFIDStatus");
					this.OnRFIDStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNoStatus", DbType="Bit")]
		public System.Nullable<bool> ContactNoStatus
		{
			get
			{
				return this._ContactNoStatus;
			}
			set
			{
				if ((this._ContactNoStatus != value))
				{
					this.OnContactNoStatusChanging(value);
					this.SendPropertyChanging();
					this._ContactNoStatus = value;
					this.SendPropertyChanged("ContactNoStatus");
					this.OnContactNoStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRegistered", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRegistered
		{
			get
			{
				return this._DateRegistered;
			}
			set
			{
				if ((this._DateRegistered != value))
				{
					this.OnDateRegisteredChanging(value);
					this.SendPropertyChanging();
					this._DateRegistered = value;
					this.SendPropertyChanged("DateRegistered");
					this.OnDateRegisteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(10)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearLevel", DbType="VarChar(50)")]
		public string YearLevel
		{
			get
			{
				return this._YearLevel;
			}
			set
			{
				if ((this._YearLevel != value))
				{
					this.OnYearLevelChanging(value);
					this.SendPropertyChanging();
					this._YearLevel = value;
					this.SendPropertyChanged("YearLevel");
					this.OnYearLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfilePicture", DbType="VarChar(MAX)")]
		public string ProfilePicture
		{
			get
			{
				return this._ProfilePicture;
			}
			set
			{
				if ((this._ProfilePicture != value))
				{
					this.OnProfilePictureChanging(value);
					this.SendPropertyChanging();
					this._ProfilePicture = value;
					this.SendPropertyChanged("ProfilePicture");
					this.OnProfilePictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFIDNo", DbType="VarChar(50)")]
		public string RFIDNo
		{
			get
			{
				return this._RFIDNo;
			}
			set
			{
				if ((this._RFIDNo != value))
				{
					this.OnRFIDNoChanging(value);
					this.SendPropertyChanging();
					this._RFIDNo = value;
					this.SendPropertyChanged("RFIDNo");
					this.OnRFIDNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Remainders")]
	public partial class T_Remainder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Remainders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRemaindersChanging(string value);
    partial void OnRemaindersChanged();
    #endregion
		
		public T_Remainder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remainders", DbType="VarChar(MAX)")]
		public string Remainders
		{
			get
			{
				return this._Remainders;
			}
			set
			{
				if ((this._Remainders != value))
				{
					this.OnRemaindersChanging(value);
					this.SendPropertyChanging();
					this._Remainders = value;
					this.SendPropertyChanged("Remainders");
					this.OnRemaindersChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_SystemUserLogs")]
	public partial class T_SystemUserLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _UserID;
		
		private string _UserPassword;
		
		private System.Nullable<System.DateTime> _TimeIN;
		
		private System.Nullable<System.DateTime> _TimeOUT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnTimeINChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeINChanged();
    partial void OnTimeOUTChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeOUTChanged();
    #endregion
		
		public T_SystemUserLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="VarChar(50)")]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeIN", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeIN
		{
			get
			{
				return this._TimeIN;
			}
			set
			{
				if ((this._TimeIN != value))
				{
					this.OnTimeINChanging(value);
					this.SendPropertyChanging();
					this._TimeIN = value;
					this.SendPropertyChanged("TimeIN");
					this.OnTimeINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOUT", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeOUT
		{
			get
			{
				return this._TimeOUT;
			}
			set
			{
				if ((this._TimeOUT != value))
				{
					this.OnTimeOUTChanging(value);
					this.SendPropertyChanging();
					this._TimeOUT = value;
					this.SendPropertyChanged("TimeOUT");
					this.OnTimeOUTChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_OnNotification")]
	public partial class T_OnNotification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<bool> _OnMessage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnOnMessageChanging(System.Nullable<bool> value);
    partial void OnOnMessageChanged();
    #endregion
		
		public T_OnNotification()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnMessage", DbType="Bit")]
		public System.Nullable<bool> OnMessage
		{
			get
			{
				return this._OnMessage;
			}
			set
			{
				if ((this._OnMessage != value))
				{
					this.OnOnMessageChanging(value);
					this.SendPropertyChanging();
					this._OnMessage = value;
					this.SendPropertyChanged("OnMessage");
					this.OnOnMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_ScanUserLogs")]
	public partial class T_ScanUserLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _StudentID;
		
		private string _RoomCode;
		
		private string _SubjectCode;
		
		private string _SubjectDescription;
		
		private System.Nullable<System.DateTime> _TimeIN;
		
		private System.Nullable<System.DateTime> _TimeOUT;
		
		private string _MessageID;
		
		private string _SendingNo;
		
		private string _SendingTo;
		
		private System.Nullable<double> _TotalHours;
		
		private string _Day;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnStudentIDChanging(string value);
    partial void OnStudentIDChanged();
    partial void OnRoomCodeChanging(string value);
    partial void OnRoomCodeChanged();
    partial void OnSubjectCodeChanging(string value);
    partial void OnSubjectCodeChanged();
    partial void OnSubjectDescriptionChanging(string value);
    partial void OnSubjectDescriptionChanged();
    partial void OnTimeINChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeINChanged();
    partial void OnTimeOUTChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeOUTChanged();
    partial void OnMessageIDChanging(string value);
    partial void OnMessageIDChanged();
    partial void OnSendingNoChanging(string value);
    partial void OnSendingNoChanged();
    partial void OnSendingToChanging(string value);
    partial void OnSendingToChanged();
    partial void OnTotalHoursChanging(System.Nullable<double> value);
    partial void OnTotalHoursChanged();
    partial void OnDayChanging(string value);
    partial void OnDayChanged();
    #endregion
		
		public T_ScanUserLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="VarChar(50)")]
		public string StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomCode", DbType="VarChar(50)")]
		public string RoomCode
		{
			get
			{
				return this._RoomCode;
			}
			set
			{
				if ((this._RoomCode != value))
				{
					this.OnRoomCodeChanging(value);
					this.SendPropertyChanging();
					this._RoomCode = value;
					this.SendPropertyChanged("RoomCode");
					this.OnRoomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectCode", DbType="VarChar(50)")]
		public string SubjectCode
		{
			get
			{
				return this._SubjectCode;
			}
			set
			{
				if ((this._SubjectCode != value))
				{
					this.OnSubjectCodeChanging(value);
					this.SendPropertyChanging();
					this._SubjectCode = value;
					this.SendPropertyChanged("SubjectCode");
					this.OnSubjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectDescription", DbType="VarChar(50)")]
		public string SubjectDescription
		{
			get
			{
				return this._SubjectDescription;
			}
			set
			{
				if ((this._SubjectDescription != value))
				{
					this.OnSubjectDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SubjectDescription = value;
					this.SendPropertyChanged("SubjectDescription");
					this.OnSubjectDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeIN", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeIN
		{
			get
			{
				return this._TimeIN;
			}
			set
			{
				if ((this._TimeIN != value))
				{
					this.OnTimeINChanging(value);
					this.SendPropertyChanging();
					this._TimeIN = value;
					this.SendPropertyChanged("TimeIN");
					this.OnTimeINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOUT", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeOUT
		{
			get
			{
				return this._TimeOUT;
			}
			set
			{
				if ((this._TimeOUT != value))
				{
					this.OnTimeOUTChanging(value);
					this.SendPropertyChanging();
					this._TimeOUT = value;
					this.SendPropertyChanged("TimeOUT");
					this.OnTimeOUTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="VarChar(50)")]
		public string MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendingNo", DbType="VarChar(50)")]
		public string SendingNo
		{
			get
			{
				return this._SendingNo;
			}
			set
			{
				if ((this._SendingNo != value))
				{
					this.OnSendingNoChanging(value);
					this.SendPropertyChanging();
					this._SendingNo = value;
					this.SendPropertyChanged("SendingNo");
					this.OnSendingNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendingTo", DbType="VarChar(50)")]
		public string SendingTo
		{
			get
			{
				return this._SendingTo;
			}
			set
			{
				if ((this._SendingTo != value))
				{
					this.OnSendingToChanging(value);
					this.SendPropertyChanging();
					this._SendingTo = value;
					this.SendPropertyChanged("SendingTo");
					this.OnSendingToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalHours", DbType="Float")]
		public System.Nullable<double> TotalHours
		{
			get
			{
				return this._TotalHours;
			}
			set
			{
				if ((this._TotalHours != value))
				{
					this.OnTotalHoursChanging(value);
					this.SendPropertyChanging();
					this._TotalHours = value;
					this.SendPropertyChanged("TotalHours");
					this.OnTotalHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="VarChar(50)")]
		public string Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_InstructorInformation")]
	public partial class T_InstructorInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _EmployeeID;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _ContactNo;
		
		private System.Nullable<System.DateTime> _BDay;
		
		private string _Gender;
		
		private string _Address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnContactNoChanging(string value);
    partial void OnContactNoChanged();
    partial void OnBDayChanging(System.Nullable<System.DateTime> value);
    partial void OnBDayChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public T_InstructorInformation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="VarChar(50)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNo", DbType="VarChar(50)")]
		public string ContactNo
		{
			get
			{
				return this._ContactNo;
			}
			set
			{
				if ((this._ContactNo != value))
				{
					this.OnContactNoChanging(value);
					this.SendPropertyChanging();
					this._ContactNo = value;
					this.SendPropertyChanged("ContactNo");
					this.OnContactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> BDay
		{
			get
			{
				return this._BDay;
			}
			set
			{
				if ((this._BDay != value))
				{
					this.OnBDayChanging(value);
					this.SendPropertyChanging();
					this._BDay = value;
					this.SendPropertyChanged("BDay");
					this.OnBDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_AccessRight")]
	public partial class T_AccessRight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _PositionID;
		
		private string _JobTitle;
		
		private string _Description;
		
		private System.Nullable<bool> _Student;
		
		private System.Nullable<bool> _Instructor;
		
		private System.Nullable<bool> _Position;
		
		private System.Nullable<bool> _Users;
		
		private System.Nullable<bool> _YearLevel;
		
		private System.Nullable<bool> _CivilStatus;
		
		private System.Nullable<bool> _Application;
		
		private System.Nullable<bool> _Course;
		
		private System.Nullable<bool> _Subject;
		
		private System.Nullable<bool> _Room;
		
		private System.Nullable<bool> _Time;
		
		private System.Nullable<bool> _Display;
		
		private System.Nullable<bool> _Report;
		
		private System.Nullable<bool> _DeviceConfiguration;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<bool> _RoomType;
		
		private System.Nullable<bool> _Building;
		
		private System.Nullable<bool> _ViewRoom;
		
		private System.Nullable<bool> _ViewCourse;
		
		private System.Nullable<bool> _ViewInstructor;
		
		private System.Nullable<bool> _MaintenanceMessage;
		
		private System.Nullable<bool> _NotifyStudent;
		
		private System.Nullable<bool> _SMSSettings;
		
		private System.Nullable<bool> _Semester;
		
		private System.Nullable<bool> _YearClass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPositionIDChanging(string value);
    partial void OnPositionIDChanged();
    partial void OnJobTitleChanging(string value);
    partial void OnJobTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStudentChanging(System.Nullable<bool> value);
    partial void OnStudentChanged();
    partial void OnInstructorChanging(System.Nullable<bool> value);
    partial void OnInstructorChanged();
    partial void OnPositionChanging(System.Nullable<bool> value);
    partial void OnPositionChanged();
    partial void OnUsersChanging(System.Nullable<bool> value);
    partial void OnUsersChanged();
    partial void OnYearLevelChanging(System.Nullable<bool> value);
    partial void OnYearLevelChanged();
    partial void OnCivilStatusChanging(System.Nullable<bool> value);
    partial void OnCivilStatusChanged();
    partial void OnApplicationChanging(System.Nullable<bool> value);
    partial void OnApplicationChanged();
    partial void OnCourseChanging(System.Nullable<bool> value);
    partial void OnCourseChanged();
    partial void OnSubjectChanging(System.Nullable<bool> value);
    partial void OnSubjectChanged();
    partial void OnRoomChanging(System.Nullable<bool> value);
    partial void OnRoomChanged();
    partial void OnTimeChanging(System.Nullable<bool> value);
    partial void OnTimeChanged();
    partial void OnDisplayChanging(System.Nullable<bool> value);
    partial void OnDisplayChanged();
    partial void OnReportChanging(System.Nullable<bool> value);
    partial void OnReportChanged();
    partial void OnDeviceConfigurationChanging(System.Nullable<bool> value);
    partial void OnDeviceConfigurationChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnRoomTypeChanging(System.Nullable<bool> value);
    partial void OnRoomTypeChanged();
    partial void OnBuildingChanging(System.Nullable<bool> value);
    partial void OnBuildingChanged();
    partial void OnViewRoomChanging(System.Nullable<bool> value);
    partial void OnViewRoomChanged();
    partial void OnViewCourseChanging(System.Nullable<bool> value);
    partial void OnViewCourseChanged();
    partial void OnViewInstructorChanging(System.Nullable<bool> value);
    partial void OnViewInstructorChanged();
    partial void OnMaintenanceMessageChanging(System.Nullable<bool> value);
    partial void OnMaintenanceMessageChanged();
    partial void OnNotifyStudentChanging(System.Nullable<bool> value);
    partial void OnNotifyStudentChanged();
    partial void OnSMSSettingsChanging(System.Nullable<bool> value);
    partial void OnSMSSettingsChanged();
    partial void OnSemesterChanging(System.Nullable<bool> value);
    partial void OnSemesterChanged();
    partial void OnYearClassChanging(System.Nullable<bool> value);
    partial void OnYearClassChanged();
    #endregion
		
		public T_AccessRight()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="VarChar(50)")]
		public string PositionID
		{
			get
			{
				return this._PositionID;
			}
			set
			{
				if ((this._PositionID != value))
				{
					this.OnPositionIDChanging(value);
					this.SendPropertyChanging();
					this._PositionID = value;
					this.SendPropertyChanged("PositionID");
					this.OnPositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="VarChar(50)")]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this.OnJobTitleChanging(value);
					this.SendPropertyChanging();
					this._JobTitle = value;
					this.SendPropertyChanged("JobTitle");
					this.OnJobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student", DbType="Bit")]
		public System.Nullable<bool> Student
		{
			get
			{
				return this._Student;
			}
			set
			{
				if ((this._Student != value))
				{
					this.OnStudentChanging(value);
					this.SendPropertyChanging();
					this._Student = value;
					this.SendPropertyChanged("Student");
					this.OnStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instructor", DbType="Bit")]
		public System.Nullable<bool> Instructor
		{
			get
			{
				return this._Instructor;
			}
			set
			{
				if ((this._Instructor != value))
				{
					this.OnInstructorChanging(value);
					this.SendPropertyChanging();
					this._Instructor = value;
					this.SendPropertyChanged("Instructor");
					this.OnInstructorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Bit")]
		public System.Nullable<bool> Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Users", DbType="Bit")]
		public System.Nullable<bool> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				if ((this._Users != value))
				{
					this.OnUsersChanging(value);
					this.SendPropertyChanging();
					this._Users = value;
					this.SendPropertyChanged("Users");
					this.OnUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearLevel", DbType="Bit")]
		public System.Nullable<bool> YearLevel
		{
			get
			{
				return this._YearLevel;
			}
			set
			{
				if ((this._YearLevel != value))
				{
					this.OnYearLevelChanging(value);
					this.SendPropertyChanging();
					this._YearLevel = value;
					this.SendPropertyChanged("YearLevel");
					this.OnYearLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CivilStatus", DbType="Bit")]
		public System.Nullable<bool> CivilStatus
		{
			get
			{
				return this._CivilStatus;
			}
			set
			{
				if ((this._CivilStatus != value))
				{
					this.OnCivilStatusChanging(value);
					this.SendPropertyChanging();
					this._CivilStatus = value;
					this.SendPropertyChanged("CivilStatus");
					this.OnCivilStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Application", DbType="Bit")]
		public System.Nullable<bool> Application
		{
			get
			{
				return this._Application;
			}
			set
			{
				if ((this._Application != value))
				{
					this.OnApplicationChanging(value);
					this.SendPropertyChanging();
					this._Application = value;
					this.SendPropertyChanged("Application");
					this.OnApplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="Bit")]
		public System.Nullable<bool> Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="Bit")]
		public System.Nullable<bool> Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room", DbType="Bit")]
		public System.Nullable<bool> Room
		{
			get
			{
				return this._Room;
			}
			set
			{
				if ((this._Room != value))
				{
					this.OnRoomChanging(value);
					this.SendPropertyChanging();
					this._Room = value;
					this.SendPropertyChanged("Room");
					this.OnRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Bit")]
		public System.Nullable<bool> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display", DbType="Bit")]
		public System.Nullable<bool> Display
		{
			get
			{
				return this._Display;
			}
			set
			{
				if ((this._Display != value))
				{
					this.OnDisplayChanging(value);
					this.SendPropertyChanging();
					this._Display = value;
					this.SendPropertyChanged("Display");
					this.OnDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Report", DbType="Bit")]
		public System.Nullable<bool> Report
		{
			get
			{
				return this._Report;
			}
			set
			{
				if ((this._Report != value))
				{
					this.OnReportChanging(value);
					this.SendPropertyChanging();
					this._Report = value;
					this.SendPropertyChanged("Report");
					this.OnReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceConfiguration", DbType="Bit")]
		public System.Nullable<bool> DeviceConfiguration
		{
			get
			{
				return this._DeviceConfiguration;
			}
			set
			{
				if ((this._DeviceConfiguration != value))
				{
					this.OnDeviceConfigurationChanging(value);
					this.SendPropertyChanging();
					this._DeviceConfiguration = value;
					this.SendPropertyChanged("DeviceConfiguration");
					this.OnDeviceConfigurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomType", DbType="Bit")]
		public System.Nullable<bool> RoomType
		{
			get
			{
				return this._RoomType;
			}
			set
			{
				if ((this._RoomType != value))
				{
					this.OnRoomTypeChanging(value);
					this.SendPropertyChanging();
					this._RoomType = value;
					this.SendPropertyChanged("RoomType");
					this.OnRoomTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Building", DbType="Bit")]
		public System.Nullable<bool> Building
		{
			get
			{
				return this._Building;
			}
			set
			{
				if ((this._Building != value))
				{
					this.OnBuildingChanging(value);
					this.SendPropertyChanging();
					this._Building = value;
					this.SendPropertyChanged("Building");
					this.OnBuildingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewRoom", DbType="Bit")]
		public System.Nullable<bool> ViewRoom
		{
			get
			{
				return this._ViewRoom;
			}
			set
			{
				if ((this._ViewRoom != value))
				{
					this.OnViewRoomChanging(value);
					this.SendPropertyChanging();
					this._ViewRoom = value;
					this.SendPropertyChanged("ViewRoom");
					this.OnViewRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewCourse", DbType="Bit")]
		public System.Nullable<bool> ViewCourse
		{
			get
			{
				return this._ViewCourse;
			}
			set
			{
				if ((this._ViewCourse != value))
				{
					this.OnViewCourseChanging(value);
					this.SendPropertyChanging();
					this._ViewCourse = value;
					this.SendPropertyChanged("ViewCourse");
					this.OnViewCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewInstructor", DbType="Bit")]
		public System.Nullable<bool> ViewInstructor
		{
			get
			{
				return this._ViewInstructor;
			}
			set
			{
				if ((this._ViewInstructor != value))
				{
					this.OnViewInstructorChanging(value);
					this.SendPropertyChanging();
					this._ViewInstructor = value;
					this.SendPropertyChanged("ViewInstructor");
					this.OnViewInstructorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintenanceMessage", DbType="Bit")]
		public System.Nullable<bool> MaintenanceMessage
		{
			get
			{
				return this._MaintenanceMessage;
			}
			set
			{
				if ((this._MaintenanceMessage != value))
				{
					this.OnMaintenanceMessageChanging(value);
					this.SendPropertyChanging();
					this._MaintenanceMessage = value;
					this.SendPropertyChanged("MaintenanceMessage");
					this.OnMaintenanceMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyStudent", DbType="Bit")]
		public System.Nullable<bool> NotifyStudent
		{
			get
			{
				return this._NotifyStudent;
			}
			set
			{
				if ((this._NotifyStudent != value))
				{
					this.OnNotifyStudentChanging(value);
					this.SendPropertyChanging();
					this._NotifyStudent = value;
					this.SendPropertyChanged("NotifyStudent");
					this.OnNotifyStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSSettings", DbType="Bit")]
		public System.Nullable<bool> SMSSettings
		{
			get
			{
				return this._SMSSettings;
			}
			set
			{
				if ((this._SMSSettings != value))
				{
					this.OnSMSSettingsChanging(value);
					this.SendPropertyChanging();
					this._SMSSettings = value;
					this.SendPropertyChanged("SMSSettings");
					this.OnSMSSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="Bit")]
		public System.Nullable<bool> Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this.OnSemesterChanging(value);
					this.SendPropertyChanging();
					this._Semester = value;
					this.SendPropertyChanged("Semester");
					this.OnSemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearClass", DbType="Bit")]
		public System.Nullable<bool> YearClass
		{
			get
			{
				return this._YearClass;
			}
			set
			{
				if ((this._YearClass != value))
				{
					this.OnYearClassChanging(value);
					this.SendPropertyChanging();
					this._YearClass = value;
					this.SendPropertyChanged("YearClass");
					this.OnYearClassChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_CourseAndSubject")]
	public partial class T_CourseAndSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _SubjectCode;
		
		private string _Description;
		
		private System.Nullable<int> _Unit;
		
		private string _CourseCode;
		
		private string _CourseDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnSubjectCodeChanging(string value);
    partial void OnSubjectCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUnitChanging(System.Nullable<int> value);
    partial void OnUnitChanged();
    partial void OnCourseCodeChanging(string value);
    partial void OnCourseCodeChanged();
    partial void OnCourseDescriptionChanging(string value);
    partial void OnCourseDescriptionChanged();
    #endregion
		
		public T_CourseAndSubject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectCode", DbType="VarChar(50)")]
		public string SubjectCode
		{
			get
			{
				return this._SubjectCode;
			}
			set
			{
				if ((this._SubjectCode != value))
				{
					this.OnSubjectCodeChanging(value);
					this.SendPropertyChanging();
					this._SubjectCode = value;
					this.SendPropertyChanged("SubjectCode");
					this.OnSubjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="Int")]
		public System.Nullable<int> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCode", DbType="VarChar(50)")]
		public string CourseCode
		{
			get
			{
				return this._CourseCode;
			}
			set
			{
				if ((this._CourseCode != value))
				{
					this.OnCourseCodeChanging(value);
					this.SendPropertyChanging();
					this._CourseCode = value;
					this.SendPropertyChanged("CourseCode");
					this.OnCourseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseDescription", DbType="VarChar(MAX)")]
		public string CourseDescription
		{
			get
			{
				return this._CourseDescription;
			}
			set
			{
				if ((this._CourseDescription != value))
				{
					this.OnCourseDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CourseDescription = value;
					this.SendPropertyChanged("CourseDescription");
					this.OnCourseDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_RegisteredStudentSemester")]
	public partial class T_RegisteredStudentSemester : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _StudentID;
		
		private string _RoomCode;
		
		private string _ParentsNo;
		
		private bool _ParentsActive;
		
		private string _MessageID;
		
		private string _SubjectCode;
		
		private string _SubjectDescription;
		
		private System.DateTime _TimeStart;
		
		private System.DateTime _TImeEnd;
		
		private string _Day;
		
		private string _Semester;
		
		private System.DateTime _SemStartDate;
		
		private System.DateTime _SemEndDate;
		
		private string _YearClass;
		
		private System.Nullable<bool> _Active;
		
		private string _RFID;
		
		private System.Nullable<bool> _AlreadyIN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnStudentIDChanging(string value);
    partial void OnStudentIDChanged();
    partial void OnRoomCodeChanging(string value);
    partial void OnRoomCodeChanged();
    partial void OnParentsNoChanging(string value);
    partial void OnParentsNoChanged();
    partial void OnParentsActiveChanging(bool value);
    partial void OnParentsActiveChanged();
    partial void OnMessageIDChanging(string value);
    partial void OnMessageIDChanged();
    partial void OnSubjectCodeChanging(string value);
    partial void OnSubjectCodeChanged();
    partial void OnSubjectDescriptionChanging(string value);
    partial void OnSubjectDescriptionChanged();
    partial void OnTimeStartChanging(System.DateTime value);
    partial void OnTimeStartChanged();
    partial void OnTImeEndChanging(System.DateTime value);
    partial void OnTImeEndChanged();
    partial void OnDayChanging(string value);
    partial void OnDayChanged();
    partial void OnSemesterChanging(string value);
    partial void OnSemesterChanged();
    partial void OnSemStartDateChanging(System.DateTime value);
    partial void OnSemStartDateChanged();
    partial void OnSemEndDateChanging(System.DateTime value);
    partial void OnSemEndDateChanged();
    partial void OnYearClassChanging(string value);
    partial void OnYearClassChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnRFIDChanging(string value);
    partial void OnRFIDChanged();
    partial void OnAlreadyINChanging(System.Nullable<bool> value);
    partial void OnAlreadyINChanged();
    #endregion
		
		public T_RegisteredStudentSemester()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RoomCode
		{
			get
			{
				return this._RoomCode;
			}
			set
			{
				if ((this._RoomCode != value))
				{
					this.OnRoomCodeChanging(value);
					this.SendPropertyChanging();
					this._RoomCode = value;
					this.SendPropertyChanged("RoomCode");
					this.OnRoomCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentsNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ParentsNo
		{
			get
			{
				return this._ParentsNo;
			}
			set
			{
				if ((this._ParentsNo != value))
				{
					this.OnParentsNoChanging(value);
					this.SendPropertyChanging();
					this._ParentsNo = value;
					this.SendPropertyChanged("ParentsNo");
					this.OnParentsNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentsActive", DbType="Bit NOT NULL")]
		public bool ParentsActive
		{
			get
			{
				return this._ParentsActive;
			}
			set
			{
				if ((this._ParentsActive != value))
				{
					this.OnParentsActiveChanging(value);
					this.SendPropertyChanging();
					this._ParentsActive = value;
					this.SendPropertyChanged("ParentsActive");
					this.OnParentsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubjectCode
		{
			get
			{
				return this._SubjectCode;
			}
			set
			{
				if ((this._SubjectCode != value))
				{
					this.OnSubjectCodeChanging(value);
					this.SendPropertyChanging();
					this._SubjectCode = value;
					this.SendPropertyChanged("SubjectCode");
					this.OnSubjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectDescription", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubjectDescription
		{
			get
			{
				return this._SubjectDescription;
			}
			set
			{
				if ((this._SubjectDescription != value))
				{
					this.OnSubjectDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SubjectDescription = value;
					this.SendPropertyChanged("SubjectDescription");
					this.OnSubjectDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStart", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStart
		{
			get
			{
				return this._TimeStart;
			}
			set
			{
				if ((this._TimeStart != value))
				{
					this.OnTimeStartChanging(value);
					this.SendPropertyChanging();
					this._TimeStart = value;
					this.SendPropertyChanged("TimeStart");
					this.OnTimeStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TImeEnd", DbType="DateTime NOT NULL")]
		public System.DateTime TImeEnd
		{
			get
			{
				return this._TImeEnd;
			}
			set
			{
				if ((this._TImeEnd != value))
				{
					this.OnTImeEndChanging(value);
					this.SendPropertyChanging();
					this._TImeEnd = value;
					this.SendPropertyChanged("TImeEnd");
					this.OnTImeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Semester
		{
			get
			{
				return this._Semester;
			}
			set
			{
				if ((this._Semester != value))
				{
					this.OnSemesterChanging(value);
					this.SendPropertyChanging();
					this._Semester = value;
					this.SendPropertyChanged("Semester");
					this.OnSemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SemStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime SemStartDate
		{
			get
			{
				return this._SemStartDate;
			}
			set
			{
				if ((this._SemStartDate != value))
				{
					this.OnSemStartDateChanging(value);
					this.SendPropertyChanging();
					this._SemStartDate = value;
					this.SendPropertyChanged("SemStartDate");
					this.OnSemStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SemEndDate", DbType="DateTime NOT NULL")]
		public System.DateTime SemEndDate
		{
			get
			{
				return this._SemEndDate;
			}
			set
			{
				if ((this._SemEndDate != value))
				{
					this.OnSemEndDateChanging(value);
					this.SendPropertyChanging();
					this._SemEndDate = value;
					this.SendPropertyChanged("SemEndDate");
					this.OnSemEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearClass", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string YearClass
		{
			get
			{
				return this._YearClass;
			}
			set
			{
				if ((this._YearClass != value))
				{
					this.OnYearClassChanging(value);
					this.SendPropertyChanging();
					this._YearClass = value;
					this.SendPropertyChanged("YearClass");
					this.OnYearClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFID", DbType="VarChar(50)")]
		public string RFID
		{
			get
			{
				return this._RFID;
			}
			set
			{
				if ((this._RFID != value))
				{
					this.OnRFIDChanging(value);
					this.SendPropertyChanging();
					this._RFID = value;
					this.SendPropertyChanged("RFID");
					this.OnRFIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlreadyIN", DbType="Bit")]
		public System.Nullable<bool> AlreadyIN
		{
			get
			{
				return this._AlreadyIN;
			}
			set
			{
				if ((this._AlreadyIN != value))
				{
					this.OnAlreadyINChanging(value);
					this.SendPropertyChanging();
					this._AlreadyIN = value;
					this.SendPropertyChanged("AlreadyIN");
					this.OnAlreadyINChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
